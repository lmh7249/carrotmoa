name: Deploy To EC2

on:
  pull_request:
    branches:
      - develop
    types:
      - closed


jobs:
  Deploy:
    if: github.event.pull_request.merged == true  # 병합된 경우에만 실행
    runs-on: ubuntu-latest
    steps:
       - name: Github Repository에 올린 파일들을 불러오기
         uses: actions/checkout@v4

       - name: JDK 17버전 설치
         uses: actions/setup-java@v4
         with:
            distribution: temurin
            java-version: 17

       - name: 테스트 및 빌드하기
         run: |
           chmod +x ./gradlew
           ./gradlew clean build

       - name: 빌드된 파일 이름 변경하기
         run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

       - name: 압축하기
         run: tar -czvf $GITHUB_SHA.tar.gz project.jar appspec.yml scripts

       - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
         uses: aws-actions/configure-aws-credentials@v4
         with:
           aws-region: ap-northeast-2
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

       - name: 서버 환경 변수 설정
         run: echo "JASYPT_PASSWORD=${{ secrets.JASYPT_PASSWORD }}" >> /home/ubuntu/.bashrc

       - name: S3에 프로젝트 폴더 업로드하기
         run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://carrotmoa-server/$GITHUB_SHA.tar.gz

       - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
         run: aws deploy create-deployment
            --application-name carrotmoa
            --deployment-config-name CodeDeployDefault.AllAtOnce
            --deployment-group-name Production
            --s3-location bucket=carrotmoa-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz